diff --git openjdk/corba/make/common/Defs-linux.gmk openjdk/corba/make/common/Defs-linux.gmk
index f308203..5ba15dc 100644
--- openjdk/corba/make/common/Defs-linux.gmk
+++ openjdk/corba/make/common/Defs-linux.gmk
@@ -82,9 +82,9 @@ CC_LOWER_OPT   = -O2
 CC_NO_OPT      =
 
 ifeq ($(PRODUCT), java)
-    _OPT = $(CC_HIGHER_OPT)
+    _OPT = $(OE_CFLAGS)
 else
-    _OPT = $(CC_LOWER_OPT)
+    _OPT = $(OE_CFLAGS)
     CPPFLAGS_DBG    += -DLOGGING 
 endif
 
@@ -94,7 +94,7 @@ endif
 #    as the default.
 CFLAGS_REQUIRED_alpha   += -mieee -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_amd64   += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
-CFLAGS_REQUIRED_arm     += -D_LITTLE_ENDIAN
+CFLAGS_REQUIRED_arm     += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_hppa    +=
 CFLAGS_REQUIRED_i586    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_ia64    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
@@ -221,7 +221,7 @@ LDFLAGS_COMMON  += $(LDFLAGS_DEFS_OPTION)
 #
 # -L paths for finding and -ljava
 #
-LDFLAGS_OPT     = -Xlinker -O1
+LDFLAGS_OPT     = $(OE_LDFLAGS)
 LDFLAGS_COMMON += -L$(LIBDIR)/$(LIBARCH)
 LDFLAGS_COMMON += -Wl,-soname=$(LIB_PREFIX)$(LIBRARY).$(LIBRARY_SUFFIX)
 
diff --git openjdk/hotspot/make/linux/makefiles/gcc.make openjdk/hotspot/make/linux/makefiles/gcc.make
index 11de79a..c5751b2 100644
--- openjdk/hotspot/make/linux/makefiles/gcc.make
+++ openjdk/hotspot/make/linux/makefiles/gcc.make
@@ -140,7 +140,7 @@ CFLAGS_WARN/DEFAULT = $(WARNINGS_ARE_ERRORS) $(ACCEPTABLE_WARNINGS)
 CFLAGS_WARN/BYFILE = $(CFLAGS_WARN/$@)$(CFLAGS_WARN/DEFAULT$(CFLAGS_WARN/$@)) 
 
 # The flags to use for an Optimized g++ build
-OPT_CFLAGS += -O3
+OPT_CFLAGS += $(OE_CFLAGS)
 
 # Hotspot uses very unstrict aliasing turn this optimization off
 OPT_CFLAGS += -fno-strict-aliasing
@@ -184,7 +184,7 @@ LFLAGS += -Wl,-relax
 endif
 
 # Enable linker optimization
-LFLAGS += -Xlinker -O1
+LFLAGS += $(OE_LDFLAGS)
 
 # If this is a --hash-style=gnu system, use --hash-style=both
 #   The gnu .hash section won't work on some Linux systems like SuSE 10.
diff --git openjdk/hotspot/make/linux/makefiles/jsig.make openjdk/hotspot/make/linux/makefiles/jsig.make
index 18f65d9..f12a798 100644
--- openjdk/hotspot/make/linux/makefiles/jsig.make
+++ openjdk/hotspot/make/linux/makefiles/jsig.make
@@ -42,7 +42,7 @@ LIBJSIG_MAPFILE = $(MAKEFILES_DIR)/mapfile-vers-jsig
 # cause problems with interposing. See CR: 6466665
 # LFLAGS_JSIG += $(MAPFLAG:FILENAME=$(LIBJSIG_MAPFILE))
 
-LFLAGS_JSIG += -D_GNU_SOURCE -D_REENTRANT $(LDFLAGS_HASH_STYLE)
+LFLAGS_JSIG += -D_GNU_SOURCE -D_REENTRANT $(LDFLAGS_HASH_STYLE) $(OE_LDFLAGS)
 
 # DEBUG_BINARIES overrides everything, use full -g debug information
 ifeq ($(DEBUG_BINARIES), true)
diff --git openjdk/hotspot/make/linux/makefiles/launcher.make openjdk/hotspot/make/linux/makefiles/launcher.make
index c5cf503..ae7af2e 100644
--- openjdk/hotspot/make/linux/makefiles/launcher.make
+++ openjdk/hotspot/make/linux/makefiles/launcher.make
@@ -50,7 +50,7 @@ ifeq ($(LINK_INTO),AOUT)
   LIBS_LAUNCHER             += $(STATIC_STDCXX) $(LIBS)
 else
   LAUNCHER.o                 = launcher.o
-  LFLAGS_LAUNCHER           += -L `pwd`
+  LFLAGS_LAUNCHER           += -L `pwd` $(OE_LAUNCHER_LDFLAGS) $(OE_LDFLAGS)
   LIBS_LAUNCHER             += -l$(JVM) $(LIBS) -lstdc++
   ifeq ($(SHARK_BUILD), true)
     LFLAGS_LAUNCHER += $(LLVM_LDFLAGS)
diff --git openjdk/jdk/make/common/Defs-linux.gmk openjdk/jdk/make/common/Defs-linux.gmk
index 4e31797..03a84dd 100644
--- openjdk/jdk/make/common/Defs-linux.gmk
+++ openjdk/jdk/make/common/Defs-linux.gmk
@@ -89,9 +89,9 @@ HPIS = native
 
 ifndef OPTIMIZATION_LEVEL
   ifeq ($(PRODUCT), java)
-    OPTIMIZATION_LEVEL = HIGHER
+    OPTIMIZATION_LEVEL = $(OE_CFLAGS)
   else
-    OPTIMIZATION_LEVEL = LOWER
+    OPTIMIZATION_LEVEL = $(OE_CFLAGS)
   endif
 endif
 
@@ -108,7 +108,7 @@ CC_OPT          = $(CC_OPT/$(OPTIMIZATION_LEVEL))
 #    as the default.
 CFLAGS_REQUIRED_alpha   += -mieee -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_amd64   += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
-CFLAGS_REQUIRED_arm     += -D_LITTLE_ENDIAN
+CFLAGS_REQUIRED_arm     += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_hppa    +=
 CFLAGS_REQUIRED_i586    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
 CFLAGS_REQUIRED_ia64    += -fno-omit-frame-pointer -D_LITTLE_ENDIAN
@@ -249,7 +249,7 @@ LDFLAGS_COMMON  += $(LDFLAGS_DEFS_OPTION)
 #
 # -L paths for finding and -ljava
 #
-LDFLAGS_OPT     = -Xlinker -O1
+LDFLAGS_OPT     = $(OE_LDFLAGS)
 LDFLAGS_COMMON += -L$(LIBDIR)/$(LIBARCH)
 LDFLAGS_COMMON += -Wl,-soname=$(LIB_PREFIX)$(LIBRARY).$(LIBRARY_SUFFIX)
 
diff --git openjdk/jdk/make/sun/awt/Makefile openjdk/jdk/make/sun/awt/Makefile
index e462fba..76b56be 100644
--- openjdk/jdk/make/sun/awt/Makefile
+++ openjdk/jdk/make/sun/awt/Makefile
@@ -511,10 +511,10 @@ ifneq ($(PLATFORM), windows)
 #
 
 ifeq ($(PLATFORM), linux)
-CPPFLAGS += -I$(MOTIF_DIR)/include \
-            -I$(OPENWIN_HOME)/include \
-            -I$(OPENWIN_HOME)/include/X11/extensions \
-            -I$(PLATFORM_SRC)/native/$(PKGDIR)/font 
+#CPPFLAGS += -I$(MOTIF_DIR)/include \
+#            -I$(OPENWIN_HOME)/include \
+#            -I$(OPENWIN_HOME)/include/X11/extensions \
+CPPFLAGS +=  -I$(PLATFORM_SRC)/native/$(PKGDIR)/font 
 endif
 CPPFLAGS += -I$(SHARE_SRC)/native/$(PKGDIR)/debug \
             -I$(SHARE_SRC)/native/$(PKGDIR)/../font \
@@ -538,7 +538,7 @@ CPPFLAGS += -I$(SHARE_SRC)/native/$(PKGDIR)/debug \
 	    $(EVENT_MODEL)
 
 ifeq ($(PLATFORM), linux)
-LDFLAGS += -L$(MOTIF_LIB) -L$(OPENWIN_LIB)
+#LDFLAGS += -L$(MOTIF_LIB) -L$(OPENWIN_LIB)
 endif
 
 LDFLAGS += -L$(LIBDIR)/$(LIBARCH)/$(TSOBJDIR) \
diff --git openjdk/jdk/make/sun/awt/mawt.gmk openjdk/jdk/make/sun/awt/mawt.gmk
index 44de692..9ce661c 100644
--- openjdk/jdk/make/sun/awt/mawt.gmk
+++ openjdk/jdk/make/sun/awt/mawt.gmk
@@ -196,8 +196,8 @@ endif
 CPPFLAGS += -I$(CUPS_HEADERS_PATH)
 
 ifndef HEADLESS
-CPPFLAGS += -I$(OPENWIN_HOME)/include 
-LDFLAGS  += -L$(OPENWIN_LIB)
+#CPPFLAGS += -I$(OPENWIN_HOME)/include 
+#LDFLAGS  += -L$(OPENWIN_LIB)
 
 endif # !HEADLESS
 
@@ -225,8 +225,8 @@ CPPFLAGS += -I$(SHARE_SRC)/native/$(PKGDIR)/debug \
 
 ifeq ($(PLATFORM), linux)
 # Checking for the X11/extensions headers at the additional location
-  CPPFLAGS += -I/X11R6/include/X11/extensions \
-              -I/usr/include/X11/extensions
+#  CPPFLAGS += -I/X11R6/include/X11/extensions \
+#              -I/usr/include/X11/extensions
 endif
 
 ifeq ($(PLATFORM), solaris)
diff --git openjdk/jdk/make/sun/xawt/Makefile openjdk/jdk/make/sun/xawt/Makefile
index 4b4c782..440699b 100644
--- openjdk/jdk/make/sun/xawt/Makefile
+++ openjdk/jdk/make/sun/xawt/Makefile
@@ -129,11 +129,12 @@ CPPFLAGS += -DXAWT -DXAWT_HACK \
         -I$(PLATFORM_SRC)/native/sun/awt
 
 ifeq ($(PLATFORM), linux)
+# Very unsuitable for cross-compilation.
 # Allows for builds on Debian GNU Linux, X11 is in a different place 
-  CPPFLAGS += -I/usr/X11R6/include/X11/extensions \
-              -I/usr/include/X11/extensions \
-              -I$(MOTIF_DIR)/include \
-              -I$(OPENWIN_HOME)/include 
+#  CPPFLAGS += -I/usr/X11R6/include/X11/extensions \
+#              -I/usr/include/X11/extensions \
+#              -I$(MOTIF_DIR)/include \
+#              -I$(OPENWIN_HOME)/include 
 endif
 
 ifeq ($(PLATFORM), solaris)
@@ -250,7 +251,7 @@ $(SIZES): $(SIZERS)
 	    $(CHMOD) +w $@;\
 	else	\
 	    $(ECHO) GENERATING $@; \
-	    $(WRAPPER_GENERATOR_DIR)/sizer$(suffix $@) > $@; \
+	    $(QEMU) $(WRAPPER_GENERATOR_DIR)/sizer$(suffix $@) > $@; \
 	fi
 	@if [ "$(DOCOMPARE)$(suffix $@)" = "true.64" ]; then \
 	    $(ECHO) COMPARING $@ and $(STORED_SIZES_TMPL_$(PLATFORM)_$(LIBARCH)); \
diff --git openjdk/jdk/make/sun/xawt/Makefile openjdk/jdk/make/sun/xawt/Makefile
index 440699b..1fa311d 100644
--- openjdk/jdk/make/sun/xawt/Makefile
+++ openjdk/jdk/make/sun/xawt/Makefile
@@ -46,7 +46,7 @@ include FILES_export_unix.gmk
 AUTO_FILES_JAVA_DIRS = sun/awt/X11
 AUTO_JAVA_PRUNE = WrapperGenerator.java
 
-LDFLAGS += -L$(OPENWIN_LIB)
+#LDFLAGS += -L$(OPENWIN_LIB)
 
 # For Xrender extension.
 ifeq ($(PLATFORM), solaris)
diff --git openjdk/jdk/make/launchers/Makefile.launcher openjdk/jdk/make/launchers/Makefile.launcher
index f59a9d6..6edc880 100644
--- openjdk/jdk/make/launchers/Makefile.launcher
+++ openjdk/jdk/make/launchers/Makefile.launcher
@@ -152,7 +152,7 @@ endif
 ifeq ($(GUI_TOOL),true)
   ifneq ($(PLATFORM), windows)
     # Anything with a GUI needs X11 to be linked in.
-    OTHER_LDLIBS += -L$(OPENWIN_LIB) -lX11
+    OTHER_LDLIBS += -lX11
   endif
 endif
 
diff --git openjdk/jdk/make/sun/jawt/Makefile openjdk/jdk/make/sun/jawt/Makefile
index 2021434..9035da7 100644
--- openjdk/jdk/make/sun/jawt/Makefile
+++ openjdk/jdk/make/sun/jawt/Makefile
@@ -98,8 +98,7 @@ else # PLATFORM
 #
 # Other extra flags needed for compiling.
 #
-CPPFLAGS += -I$(OPENWIN_HOME)/include \
-	    -I$(SHARE_SRC)/native/$(PKGDIR)/debug \
+CPPFLAGS += -I$(SHARE_SRC)/native/$(PKGDIR)/debug \
             -I$(SHARE_SRC)/native/$(PKGDIR)/image \
 	    -I$(SHARE_SRC)/native/$(PKGDIR)/image/cvutils \
 	    -I$(SHARE_SRC)/native/$(PKGDIR)/alphacomposite \
diff --git openjdk/jdk/make/sun/xawt/Makefile openjdk/jdk/make/sun/xawt/Makefile
index 1fa311d..f3d06ad 100644
--- openjdk/jdk/make/sun/xawt/Makefile
+++ openjdk/jdk/make/sun/xawt/Makefile
@@ -232,7 +232,7 @@ XLIBTYPES=$(PLATFORM_SRC)/classes/sun/awt/X11/generator/xlibtypes.txt
 
 $(SIZERS): $(SIZERS_C) 
 	$(prep-target)
-	$(CC) $(CFLAGS_$(subst .,,$(suffix $@))) $(CPPFLAGS) -o $@ $(SIZER)$(suffix $@).c
+	$(CC) $(CFLAGS_$(subst .,,$(suffix $@))) $(CPPFLAGS) -static -o $@ $(SIZER)$(suffix $@).c
 
 $(WRAPPER_GENERATOR_CLASS): $(WRAPPER_GENERATOR_JAVA)
 	$(prep-target)
diff --git openjdk/hotspot/make/linux/makefiles/vm.make openjdk/hotspot/make/linux/makefiles/vm.make
index 7271a9e..e441970 100644
--- openjdk/hotspot/make/linux/makefiles/vm.make
+++ openjdk/hotspot/make/linux/makefiles/vm.make
@@ -290,6 +290,7 @@ ifeq ($(SHARK_BUILD), true)
   LIBS_VM   += $(LLVM_LIBS)
 endif
 
+LFLAGS_VM += $(OE_LDFLAGS)
 LINK_VM = $(LINK_LIB.CC)
 
 # rule for building precompiled header
diff --git openjdk/jdk/make/sun/splashscreen/Makefile openjdk/jdk/make/sun/splashscreen/Makefile
index d8d89aa..539854a 100644
--- openjdk/jdk/make/sun/splashscreen/Makefile
+++ openjdk/jdk/make/sun/splashscreen/Makefile
@@ -66,8 +66,8 @@ endif
 
 ifneq ($(PLATFORM), windows)
   CFLAGS += -DWITH_X11
-  CPPFLAGS += -I$(OPENWIN_HOME)/include -I$(OPENWIN_HOME)/include/X11/extensions
-  OTHER_LDLIBS += -L$(OPENWIN_LIB) -lX11 -lXext $(LIBM) -lpthread
+  #CPPFLAGS += -I$(OPENWIN_HOME)/include -I$(OPENWIN_HOME)/include/X11/extensions
+  OTHER_LDLIBS += -lX11 -lXext $(LIBM) -lpthread
 else # PLATFORM
   CFLAGS += -DWITH_WIN32
   OTHER_LDLIBS += kernel32.lib user32.lib gdi32.lib 
